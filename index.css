html,
body {
  margin: 0;
  padding: 0;
}
.flex-container {
  display: flex; /* apply flexbox, allows for dynamic layouts, specify height and width of container on lines 8&9  */
  width: 100vw;
  height: 100vh;
  flex-direction: column;
}

header {
  background-color: #FBFFF4;
  height: 100%;
  width: 100%;
  flex-shrink: 0; /*The flex-shrink property determines how much an element in a flex container will shrink; the larger the number, the more the element will shrink in relation to other elements in the container, with the default set to 1. */
}

main {
  display: flex;
  background-color: #FBFFF4;
  width: 100%;
  height: 100%;
  flex-flow: row wrap; /*  flex-direction-row organized L to R, column up&down, row-reverse RtoL, column-reverse BottomtoTop and flex-wrap - shrinkwindow and boxes stay 100px and wrap new line one by one when there is space to fit */
  justify-content: center; /* define where items start and end, and how they are spaced in between  value flex-start aligns elements to beginning of container. defaultsetting. center, centers elements preserving original spacing in between, space-around adds space in between each flex element so the fill space evenly. space-between, 1st and last el on row align to beg and end of row, removing whitespace on edges of container. */
  align-items: center; /* arrange elements in the direction perpendicular to your flex-direction setting . perfectly centered elements use justify content and alignitems center   */

}

.item {
  height: 100px;
  width: 100px;
  margin: 5px;
  background-color: #FCF2EC;
}

footer {
  display: flex;
  background-color: #DAEEEF;
  height: 100%;
  width: 100%;
}

.setWidth {
  flex-basis: 100px; /* determines the initial width of an element in a flex container */
  flex-grow: 1; /*specifies how much space the element should take up within a flex container. default is 0  */
}